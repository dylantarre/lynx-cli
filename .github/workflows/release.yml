name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      
      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release
      
      - name: Test
        uses: actions-rs/cargo@v1
        with:
          command: test
      
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: lynx-fm-binary
          path: target/release/lynx-fm

  publish-crates:
    name: Publish to crates.io
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      
      - name: Login to crates.io
        uses: actions-rs/cargo@v1
        with:
          command: login
          args: ${{ secrets.CRATES_IO_TOKEN }}
      
      - name: Publish to crates.io
        uses: actions-rs/cargo@v1
        with:
          command: publish

  publish-docker:
    name: Publish to Docker Hub
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: yourusername/cli-lynx-fm
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            latest
      
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  update-homebrew:
    name: Update Homebrew Formula
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Download release artifact
        uses: actions/download-artifact@v3
        with:
          name: lynx-fm-binary
          path: ./target/release/
      
      - name: Make binary executable
        run: chmod +x ./target/release/lynx-fm
      
      - name: Calculate SHA256
        id: sha
        run: |
          RELEASE_SHA=$(shasum -a 256 ./target/release/lynx-fm | awk '{print $1}')
          echo "sha=$RELEASE_SHA" >> $GITHUB_OUTPUT
      
      - name: Get version
        id: get_version
        run: echo "version=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
      
      - name: Update Homebrew formula
        run: |
          sed -i 's/url ".*"/url "https:\/\/github.com\/yourusername\/cli-lynx-fm\/archive\/refs\/tags\/v${{ steps.get_version.outputs.version }}.tar.gz"/' homebrew/cli-lynx-fm.rb
          sed -i 's/sha256 ".*"/sha256 "${{ steps.sha.outputs.sha }}"/' homebrew/cli-lynx-fm.rb
      
      - name: Create Pull Request to Homebrew tap
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: Update cli-lynx-fm to v${{ steps.get_version.outputs.version }}
          title: Update cli-lynx-fm to v${{ steps.get_version.outputs.version }}
          body: |
            Updates cli-lynx-fm to v${{ steps.get_version.outputs.version }}
            
            SHA256: ${{ steps.sha.outputs.sha }}
          branch: update-cli-lynx-fm-v${{ steps.get_version.outputs.version }}
          base: main 